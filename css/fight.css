body {
  margin: 0;
  padding: 0;
  overflow: hidden;
  font-family: 'VT323', monospace;
  background: #000;
  color: #fff;
  font-size: 20px;
}

.background-container {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 0;
  background-size: cover;
  background-position: center center;
  background-repeat: no-repeat;
  filter: brightness(0.7);
  box-shadow: inset 0 0 150px 60px rgba(0, 0, 0, 0.8);
}

/* Blood overlay containers */
.blood-overlay {
  position: fixed;
  top: 0;
  width: 50%;
  height: 100vh;
  background-size: cover;
  background-repeat: no-repeat;
  pointer-events: none;
  z-index: 999;
}

#left-blood-overlay {
  left: 0;
  background-image: url('../assests/overlay/blood1.png');
  -webkit-mask-image: linear-gradient(to right, black, transparent);
  mask-image: linear-gradient(to right, black, transparent);
}

#right-blood-overlay {
  right: 0;
  background-image: url('../assests/overlay/blood1.png');
  -webkit-mask-image: linear-gradient(to left, black, transparent);
  mask-image: linear-gradient(to left, black, transparent);
}

#center-blood-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  background-image: url('../assests/overlay/blood2.png');
  background-size: cover;
  background-repeat: no-repeat;
  pointer-events: none;
  z-index: 998;  /* Below the side overlays */
  opacity: 0;    /* Initial opacity */
}

/* Remove blood overlay vignette */
.blood-overlay::after {
  display: none;
}

/* Restore healing effect */
.blood-overlay.healing {
  animation: healingPulse 1s ease;
  filter: hue-rotate(120deg) brightness(1.2);
}

/* Restore critical effect */
.blood-overlay.critical {
  animation: bloodPulse 0.5s ease;
  filter: brightness(1.5) contrast(1.5) saturate(2);
}

@keyframes bloodPulse {
  0% { filter: brightness(1.5) contrast(1.5) saturate(2); }
  50% { filter: brightness(2) contrast(2) saturate(3); }
  100% { filter: brightness(1.5) contrast(1.5) saturate(2); }
}

@keyframes healingPulse {
  0% { filter: hue-rotate(120deg) brightness(1.2); }
  50% { filter: hue-rotate(120deg) brightness(1.5); }
  100% { filter: hue-rotate(120deg) brightness(1.2); }
}

/* Add vignette overlay */
.background-container::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: radial-gradient(circle at 50% 50%, transparent 50%, rgba(0, 0, 0, 0.7) 100%);
  pointer-events: none;
}

/* Add bottom vignette overlay */
.background-container::before {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 70%;
  background: linear-gradient(to top, rgba(0, 0, 0, 0.8) 0%, transparent 100%);
  pointer-events: none;
  z-index: 1;
}

#fightScreen {
  position: relative;
  z-index: 1;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  padding: 20px;
}

#fightHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 10px 20px;
  background: transparent;
  border-radius: 10px;
  margin-bottom: 20px;
  z-index: 1002; /* Ensure it's above other elements */
}

.round-info {
  font-size: 24px;
  font-weight: bold;
  font-family: 'Press Start 2P', cursive;
  color: #ff0000;
  text-shadow: 0 0 10px rgba(255, 0, 0, 0.7);
  letter-spacing: 2px;
}

.timer {
  font-size: 36px;
  font-weight: bold;
  font-family: 'Press Start 2P', cursive;
  color: #fff;
  background: rgba(255, 0, 0, 0.7);
  padding: 5px 15px;
  border-radius: 5px;
  letter-spacing: 2px;
  z-index: 1002; /* Ensure it's above other elements */
}

/* Round wins indicator styles */
.round-wins-container {
  display: flex;
  justify-content: space-between;
  width: 100%;
  padding: 0 20px;
  margin-bottom: 15px;
  position: relative;
  z-index: 10;
}

.player-rounds {
  display: flex;
  gap: 10px;
  align-items: center;
}

.round-indicator {
  width: 20px;
  height: 20px;
  border: 2px solid #fff;
  border-radius: 50%;
  background: rgba(0, 0, 0, 0.5);
  box-shadow: 0 0 10px rgba(255, 0, 0, 0.3);
  transition: all 0.3s ease;
}

.round-indicator.won {
  background: #ff0000;
  border-color: #ff0000;
  box-shadow: 0 0 15px rgba(255, 0, 0, 0.7);
  animation: roundWinPulse 2s infinite;
}

@keyframes roundWinPulse {
  0% { transform: scale(1); box-shadow: 0 0 15px rgba(255, 0, 0, 0.7); }
  50% { transform: scale(1.1); box-shadow: 0 0 20px rgba(255, 0, 0, 0.9); }
  100% { transform: scale(1); box-shadow: 0 0 15px rgba(255, 0, 0, 0.7); }
}

/* Health bars at the top */
.health-bars {
  display: flex;
  justify-content: space-between;
  width: 100%;
  padding: 0 20px;
  margin-bottom: 5px;
  position: relative;
  z-index: 10;
}

.player-health {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 45%;
}

.player-health-name {
  font-size: 24px;
  font-weight: bold;
  font-family: 'Press Start 2P', cursive;
  color: #fff;
  margin-bottom: 5px;
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.8),
               0 0 10px rgba(255, 0, 0, 0.9);
  letter-spacing: 2px;
}

.health-bar-container {
  width: 100%;
  height: 30px;
  background: rgba(0, 0, 0, 0.7);
  border: 3px solid #fff;
  border-radius: 8px;
  overflow: hidden;
  position: relative;
  box-shadow: 0 0 20px rgba(255, 0, 0, 0.7),
              inset 0 0 15px rgba(0, 0, 0, 0.5);
}

#player1-health .health-bar-container {
  direction: rtl; /* Make player 1's health bar decrease from right to left */
}

.health-bar {
  height: 100%;
  background: linear-gradient(90deg, 
    #ff0000 0%,
    #ff4d4d 50%,
    #ff0000 100%
  );
  transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  display: flex;
  justify-content: center;
  align-items: center;
  color: white;
  font-weight: bold;
  font-size: 20px;
  font-family: 'Press Start 2P', cursive;
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.8);
  position: relative;
  overflow: hidden;
  will-change: width;
  transform: translateZ(0);
}

/* Add shine effect to health bar */
.health-bar::after {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent 0%,
    rgba(255, 255, 255, 0.2) 50%,
    transparent 100%
  );
  animation: shine 3s infinite;
}

/* Add pulsing effect for low health */
.health-bar.low {
  background: linear-gradient(90deg, 
    #990000 0%,
    #cc0000 50%,
    #990000 100%
  );
  animation: lowHealthPulse 2s ease-in-out infinite;
}

@keyframes lowHealthPulse {
  0% { filter: brightness(1); }
  50% { filter: brightness(1.2); }
  100% { filter: brightness(1); }
}

@keyframes shine {
  0% { left: -100%; }
  20% { left: 100%; }
  100% { left: 100%; }
}

/* Add damage flash effect */
.health-bar.damage {
  animation: damageFlash 0.5s cubic-bezier(0.4, 0, 0.2, 1);
}

@keyframes damageFlash {
  0% { filter: brightness(2); background: #ffffff; }
  50% { filter: brightness(1.5); background: linear-gradient(90deg, #ff0000 0%, #ff4d4d 50%, #ff0000 100%); }
  100% { filter: brightness(1); background: linear-gradient(90deg, #ff0000 0%, #ff4d4d 50%, #ff0000 100%); }
}

/* Add main stamina bar styles */
.main-stamina-container {
  width: 100%;
  height: 15px;
  background: rgba(0, 0, 0, 0.7);
  border: 2px solid #3498db;
  border-radius: 4px;
  overflow: hidden;
  position: relative;
  box-shadow: 0 0 10px rgba(52, 152, 219, 0.5),
              inset 0 0 10px rgba(0, 0, 0, 0.5);
  margin-top: 5px;
}

.main-stamina-bar {
  height: 100%;
  background: linear-gradient(90deg, 
    #3498db 0%,
    #2980b9 50%,
    #3498db 100%
  );
  transition: width 0.2s ease-out;
  position: relative;
  overflow: hidden;
}

/* Add shine effect to main stamina bar */
.main-stamina-bar::after {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent 0%,
    rgba(255, 255, 255, 0.2) 50%,
    transparent 100%
  );
  animation: shine 3s infinite;
}

/* Add pulsing effect for low stamina */
.main-stamina-bar.low {
  background: linear-gradient(90deg, 
    #e74c3c 0%,
    #c0392b 50%,
    #e74c3c 100%
  );
  animation: staminaPulse 1s infinite;
}

@keyframes staminaPulse {
  0% { filter: brightness(1); }
  50% { filter: brightness(1.3); }
  100% { filter: brightness(1); }
}

#player1-health .main-stamina-container {
  direction: rtl; /* Make player 1's stamina bar decrease from right to left */
}

#fightArena {
  display: flex;
  justify-content: space-between;
  align-items: center;
  flex: 1;
  padding: 20px;
  position: relative;
  border-bottom: 2px dashed rgba(255, 255, 255, 0.3);
  min-height: 400px;
  position: relative;
  overflow: hidden; /* Ensure content doesn't spill out */
}

/* Move the background container inside the fight arena */
#fightArena .background-container {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -1; /* Place behind the fighters */
}

/* Base fighter styles */
.fighter {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 300px;
  position: absolute;
  bottom: 50px;
  transition: transform 0.1s ease, left 0.1s ease;
  z-index: 10;
  pointer-events: none; /* Allow clicks to pass through the fighter container */
}

/* Fighter images and hitbox */
.fighter-image {
  width: 200px;
  height: 300px;
  position: relative;
  
  transition: all 0.2s ease;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: transparent !important;
  background-size: contain !important;
  background-position: center bottom !important;
  background-repeat: no-repeat !important;
  pointer-events: auto; /* Re-enable clicks on the actual fighter image */
}

/* Add hitbox for damage area */
.fighter-image::before {
  content: '';
  position: absolute;
  width: 25%;  /* Quarter of the collision area */
  height: 30%;  /* Smaller vertical hitbox */
  top: 35%;    /* Positioned to match character torso */
  left: 37.5%; /* Centered horizontally */
  pointer-events: none;
}

/* Adjust hitbox for attacking animations */
.fighter.punch .fighter-image::before {
  width: 30%;
  left: 45%; /* Move hitbox forward during punch */
}

.fighter.kick .fighter-image::before {
  width: 35%;
  height: 20%;
  top: 45%;
  left: 45%; /* Move hitbox forward during kick */
}

/* Player 1 specific styles */
#player1 .fighter-image {
  width: 170px;
  height: 200;
  margin-bottom: -60px;
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  position: absolute;
  bottom: 0;
}

/* Player 2 specific styles */
#player2 .fighter-image {
  width: 100%;
  height: 100%;
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  position: absolute;
  bottom: 0;
}

/* Special scaling for Reign character */
[data-character="reign"] .fighter-image {
  transform: scale(0.85);
  will-change: transform;
}

/* Remove all other facing classes that might interfere */
.fighter.facing-left, .fighter.facing-right {
  /* These classes should not affect the transform */
}

/* Ensure animations don't override the facing direction */
.fighter.jumping .fighter-image,
.fighter.punch .fighter-image,
.fighter.kick .fighter-image,
.fighter.hit .fighter-image,
.fighter.guarding .fighter-image,
.fighter.blocked .fighter-image,
.fighter.spear .fighter-image,
.fighter.firebreath .fighter-image,
.fighter.iceball .fighter-image,
.fighter.slide .fighter-image,
.fighter.superpunch .fighter-image,
.fighter.superkick .fighter-image {
  /* Keep existing animation properties but don't override the scaleX for facing */
  animation-name: inherit;
  animation-duration: inherit;
  animation-timing-function: inherit;
  animation-iteration-count: inherit;
  transform-origin: bottom center;
  will-change: transform;
}

.fighter-name {
  font-size: 20px;
  font-weight: bold;
  font-family: 'Press Start 2P', cursive;
  margin-bottom: 10px;
  text-shadow: 0 0 10px rgba(255, 0, 0, 0.7);
  position: absolute;
  top: -40px;
  width: 100%;
  text-align: center;
  letter-spacing: 1px;
}

#fightStatus {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 100;
  width: 100%;
}

#fightText {
  font-size: 72px;
  font-weight: bold;
  font-family: 'Press Start 2P', cursive;
  color: #ff0000;
  text-shadow: 0 0 20px rgba(255, 0, 0, 0.9);
  animation: pulse 2s infinite;
  letter-spacing: 4px;
  text-align: center;
}

#vsText {
  font-size: 36px;
  font-weight: bold;
  font-family: 'Press Start 2P', cursive;
  color: #fff;
  margin-top: 10px;
  letter-spacing: 2px;
  text-align: center;
}

#controls {
  margin-top: 30px;
  background: rgba(0, 0, 0, 0.7);
  border-radius: 10px;
  padding: 20px;
}

.control-instructions {
  display: flex;
  justify-content: space-around;
}

.player1-controls, .player2-controls {
  text-align: center;
}

.player1-controls h3, .player2-controls h3 {
  color: #ff0000;
  margin-bottom: 10px;
  font-family: 'Press Start 2P', cursive;
  font-size: 16px;
  letter-spacing: 1px;
}

.player1-controls p, .player2-controls p {
  margin: 5px 0;
  font-size: 16px;
  font-family: 'VT323', monospace;
  letter-spacing: 1px;
}

.debug-controls {
  margin-top: 20px;
  text-align: center;
}

.debug-controls button {
  background: rgba(0, 0, 0, 0.7);
  border: 1px solid #666;
  color: #999;
  padding: 5px 10px;
  font-size: 12px;
  font-family: 'Silkscreen', cursive;
  cursor: pointer;
  border-radius: 5px;
  margin: 0 5px;
}

.debug-controls button:hover {
  background: rgba(50, 50, 50, 0.7);
  color: #fff;
}

/* Button container and back button styling */
.button-container {
    display: flex;
    justify-content: center;
    gap: 20px;
    margin-top: 20px;
}

.back-button {
    padding: 10px 20px;
    font-size: 18px;
    font-family: 'Press Start 2P', cursive;
    background: linear-gradient(to bottom, #444, #222);
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    text-transform: uppercase;
    transition: all 0.3s ease;
    letter-spacing: 2px;
    box-shadow: 0 0 10px rgba(255, 255, 255, 0.3);
}

.back-button:hover {
    transform: scale(1.1);
    background: #333;
}

/* Update styles for the other buttons */
#changeCharactersButton, #debugButton {
    padding: 10px 20px;
    font-size: 18px;
    font-family: 'Press Start 2P', cursive;
    background: linear-gradient(to bottom, #444, #222);
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    text-transform: uppercase;
    transition: all 0.3s ease;
    letter-spacing: 2px;
    box-shadow: 0 0 10px rgba(255, 255, 255, 0.3);
}

#changeCharactersButton:hover, #debugButton:hover {
    transform: scale(1.1);
    background: #333;
}

#changeCharactersButton {
    background: linear-gradient(to bottom, #ff0000, #990000);
    box-shadow: 0 0 10px rgba(255, 0, 0, 0.5);
}

#changeCharactersButton:hover {
    background: #cc0000;
}

@keyframes pulse {
  0% {
    transform: scale(1);
    opacity: 1;
  }
  50% {
    transform: scale(1.1);
    opacity: 0.8;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

/* Fighting animations */
@keyframes jump {
  0% { translate: 0 0; }
  50% { translate: 0 -200px; }
  100% { translate: 0 0; }
}

@keyframes punch {
  0% { transform: translateX(0); }
  25% { transform: translateX(20px); }
  50% { transform: translateX(30px); }
  100% { transform: translateX(0); }
}

@keyframes kick {
  0% { transform: rotate(0deg); }
  25% { transform: rotate(15deg); }
  50% { transform: rotate(30deg); }
  100% { transform: rotate(0deg); }
}

@keyframes guard {
  0% { transform: scaleX(0.9); }
  50% { transform: scaleX(0.8); filter: brightness(1.5); }
  100% { transform: scaleX(0.9); }
}

/* Apply animations to fighter states */
.fighter.jumping .fighter-image {
  animation: jump 0.5s ease;
  transform-origin: bottom center;
  will-change: transform;
  animation-fill-mode: both;
}

.fighter.punch .fighter-image {
  animation: punch 0.3s ease;
}

.fighter.kick .fighter-image {
  animation: kick 0.3s ease;
}

.fighter.hit {
    animation: none !important; /* Remove any existing animations */
    transition: left 0.1s ease-out; /* Smooth transition for pushback */
}

.fighter.hit .fighter-image {
    animation: none !important; /* Remove any existing animations */
    will-change: transform, background-image; /* Optimize performance */
}

/* Remove any existing hit animation keyframes that might cause enlargement */
@keyframes hitEffect {
    0% { transform: scale(1); }
    100% { transform: scale(1); }
}

.fighter.guarding .fighter-image {
  transform: scaleX(0.8);
  filter: brightness(1.5);
}

.fighter.blocked .fighter-image {
  animation: none;
  filter: brightness(1.5);
  box-shadow: 0 0 15px rgba(0, 255, 255, 0.5);
}

/* Game over screen */
#replayButton {
  display: block;
  margin: 20px auto;
  padding: 10px 30px;
  font-size: 24px;
  background: #ff0000;
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  text-transform: uppercase;
  transition: all 0.3s ease;
}

#replayButton:hover {
  transform: scale(1.1);
  background: #cc0000;
}

/* Special moves animations */
@keyframes spear {
  0% { transform: translateX(0); }
  25% { transform: translateX(50px); filter: brightness(1.5); }
  50% { transform: translateX(100px); filter: brightness(2); }
  75% { transform: translateX(50px); filter: brightness(1.5); }
  100% { transform: translateX(0); }
}

@keyframes firebreath {
  0% { filter: brightness(1); }
  25% { filter: brightness(1.5) hue-rotate(30deg); }
  50% { filter: brightness(2) hue-rotate(60deg); }
  75% { filter: brightness(1.5) hue-rotate(30deg); }
  100% { filter: brightness(1); }
}

@keyframes iceball {
  0% { filter: brightness(1); }
  25% { filter: brightness(1.5) hue-rotate(180deg); }
  50% { filter: brightness(2) hue-rotate(210deg); }
  75% { filter: brightness(1.5) hue-rotate(180deg); }
  100% { filter: brightness(1); }
}

@keyframes slide {
  0% { transform: translateY(0) translateX(0); }
  50% { transform: translateY(30px) translateX(100px); }
  100% { transform: translateY(0) translateX(0); }
}

@keyframes superpunch {
  0% { transform: scale(1); }
  10% { transform: scale(1.1); }
  20% { transform: scale(1.2); }
  30% { transform: scale(1.3); }
  40% { transform: scale(1.2); }
  50% { transform: scale(1.1); }
  60% { transform: translateX(50px) scale(1.1); }
  70% { transform: translateX(100px) scale(1.2); }
  80% { transform: translateX(50px) scale(1.1); }
  100% { transform: scale(1); }
}

@keyframes superkick {
  0% { transform: rotate(0deg); }
  25% { transform: rotate(15deg); }
  50% { transform: rotate(30deg) scale(1.2); }
  75% { transform: rotate(45deg) scale(1.3); }
  100% { transform: rotate(0deg); }
}

/* Apply special move animations */
.fighter.spear .fighter-image {
  animation: spear 1s ease;
}

.fighter.firebreath .fighter-image {
  animation: firebreath 1s ease;
}

.fighter.iceball .fighter-image {
  animation: iceball 1s ease;
}

.fighter.slide .fighter-image {
  animation: slide 1s ease;
}

.fighter.superpunch .fighter-image {
  animation: superpunch 1s ease;
}

.fighter.superkick .fighter-image {
  animation: superkick 1s ease;
}

/* Special move name display */
.special-move-name {
  position: absolute;
  top: -100px;
  left: 0;
  width: 100%;
  text-align: center;
  font-size: 24px;
  font-weight: bold;
  font-family: 'Press Start 2P', cursive;
  color: #ffff00;
  text-shadow: 0 0 10px #ff0000;
  animation: fadeInOut 1.5s ease;
  letter-spacing: 2px;
}

@keyframes fadeInOut {
  0% { opacity: 0; transform: translateY(20px); }
  20% { opacity: 1; transform: translateY(0); }
  80% { opacity: 1; transform: translateY(0); }
  100% { opacity: 0; transform: translateY(-20px); }
}

/* Basic arena styles */
#fightArena {
  position: relative;
  min-height: 400px;
}

/* Add collision prevention */
#player1 {
  left: 50px; /* Minimum distance from left edge */
  right: auto;
  z-index: 1;
}

#player2 {
  right: 50px; /* Minimum distance from right edge */
  left: auto;
  z-index: 2;
}

/* Ensure minimum distance between players */
#player1.facing-right {
  left: 50px;
}

#player2.facing-left {
  right: 50px;
}

/* Prevent players from crossing each other */
#player1.facing-right + #player2.facing-left {
  margin-right: 150px; /* Increased minimum distance */
}

#player2.facing-left + #player1.facing-right {
  margin-left: 150px; /* Increased minimum distance */
}

/* Add collision zone */
#player1::after,
#player2::after {
  content: '';
  position: absolute;
  width: 150px; /* Increased collision zone */
  height: 100%;
  top: 0;
  pointer-events: none;
}

#player1::after {
  right: -150px;
}

#player2::after {
  left: -150px;
}

/* Prevent overlap during movement */
#player1.facing-right {
  transition: left 0.1s ease, margin-right 0.1s ease;
}

#player2.facing-left {
  transition: right 0.1s ease, margin-left 0.1s ease;
}

/* Attack text effect */
.attack-text {
  position: absolute;
  top: -50px;
  left: 50%;
  transform: translateX(-50%);
  font-size: 24px;
  font-weight: bold;
  font-family: 'Press Start 2P', cursive;
  color: #ff0;
  text-shadow: 0 0 10px rgba(255, 255, 0, 0.7);
  pointer-events: none;
  animation: attackTextEffect 0.5s ease-out forwards;
  letter-spacing: 2px;
}

@keyframes attackTextEffect {
  0% { 
    transform: translateX(-50%) translateY(0);
    opacity: 1;
  }
  100% { 
    transform: translateX(-50%) translateY(-30px);
    opacity: 0;
  }
}

/* Update screen shake animation to not affect overlays */
@keyframes hitShake {
    0% { transform: translate(0, 0) rotate(0deg); }
    25% { transform: translate(-5px, -2px) rotate(-3deg); }
    50% { transform: translate(5px, 2px) rotate(3deg); }
    75% { transform: translate(-3px, -1px) rotate(-2deg); }
    100% { transform: translate(0, 0) rotate(0deg); }
}

.screen-shake {
    animation: hitShake 0.3s ease-in-out;
    transform-style: preserve-3d;
}

.stamina-bar {
    position: absolute;
    width: 100%;
    height: 5px;
    background-color: #34495e;
    bottom: -15px;
    left: 0;
    border-radius: 2px;
    overflow: hidden;
    visibility: hidden; /* Hide the original stamina bar */
}

.stamina-bar-fill {
    width: 100%;
    height: 100%;
    background-color: #3498db;
    transition: width 0.2s ease-out;
    visibility: hidden; /* Hide the stamina bar fill */
}

.clone-hit-flash {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: radial-gradient(circle, rgba(39, 174, 96, 0.2) 0%, rgba(39, 174, 96, 0) 70%);
    pointer-events: none;
    z-index: 995;
    animation: cloneHitFlash 0.5s ease-out forwards;
}

@keyframes cloneHitFlash {
    0% {
        opacity: 0;
        transform: scale(0.8);
    }
    50% {
        opacity: 0.8;
        transform: scale(1.2);
    }
    100% {
        opacity: 0;
        transform: scale(1.5);
    }
}

/* Enhanced clone hit effect */
.dash-clone.hit {
    animation: enhancedCloneHitEffect 1s ease-out forwards !important;
    filter: brightness(1.5) drop-shadow(0 0 20px #27ae60) !important;
}

@keyframes enhancedCloneHitEffect {
    0% { 
        opacity: 0.8;
        transform: scale(1);
        filter: brightness(1.3) drop-shadow(0 0 20px #27ae60);
    }
    50% {
        opacity: 0.6;
        transform: scale(1.4) rotate(5deg);
        filter: brightness(1.5) drop-shadow(0 0 30px #27ae60);
    }
    100% { 
        opacity: 0;
        transform: scale(1.8) rotate(-5deg);
        filter: brightness(1.7) drop-shadow(0 0 40px #27ae60);
    }
}

/* Enhanced laugh text effects */
.laugh-text {
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    color: #e74c3c;
    font-size: 32px;
    font-weight: bold;
    font-family: 'Press Start 2P', cursive;
    text-shadow: 
        0 0 10px #c0392b,
        0 0 15px #c0392b,
        0 0 20px #c0392b;
    animation: enhancedLaughTextEffect 2s ease-out forwards;
    pointer-events: none;
    z-index: 1000;
    white-space: nowrap;
}

@keyframes enhancedLaughTextEffect {
    0% { 
        opacity: 0;
        transform: translateX(-50%) translateY(0) scale(1) rotate(0deg);
    }
    10% {
        opacity: 1;
        transform: translateX(-50%) translateY(-20px) scale(1.3) rotate(-5deg);
    }
    20% {
        transform: translateX(-50%) translateY(-25px) scale(1.2) rotate(5deg);
    }
    80% {
        opacity: 1;
        transform: translateX(-50%) translateY(-40px) scale(1.2) rotate(-3deg);
    }
    100% { 
        opacity: 0;
        transform: translateX(-50%) translateY(-60px) scale(1) rotate(0deg);
    }
}

/* Enhanced healing effects for clone hit */
.healing-bar::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, 
        rgba(39, 174, 96, 0) 0%,
        rgba(39, 174, 96, 0.7) 50%,
        rgba(39, 174, 96, 0) 100%);
    animation: enhancedHealingBarShine 1s ease-in-out;
    filter: brightness(1.2);
}

@keyframes enhancedHealingBarShine {
    0% {
        transform: translateX(-100%) scale(1);
        opacity: 0.5;
    }
    50% {
        transform: translateX(0%) scale(1.1);
        opacity: 1;
    }
    100% {
        transform: translateX(100%) scale(1);
        opacity: 0.5;
    }
}

/* Enhanced screen shake for clone hit */
@keyframes enhancedHitShake {
    0% { transform: translate(0, 0) rotate(0deg); }
    25% { transform: translate(-8px, -4px) rotate(-5deg); }
    50% { transform: translate(8px, 4px) rotate(5deg); }
    75% { transform: translate(-5px, -2px) rotate(-3deg); }
    100% { transform: translate(0, 0) rotate(0deg); }
}

.screen-shake {
    animation: enhancedHitShake 0.5s ease-in-out;
}

.heal-effect {
    color: #27ae60;
    text-shadow: 
        0 0 5px #27ae60,
        0 0 10px #27ae60,
        0 0 15px #219a52;
}

.heal-plus {
    color: #27ae60;
    text-shadow: 
        0 0 5px #27ae60,
        0 0 10px #27ae60,
        0 0 15px #219a52;
}

.heal-amount {
    color: #27ae60;
    text-shadow: 
        0 0 10px #27ae60,
        0 0 15px #27ae60,
        0 0 20px #219a52;
}

.heal-sparkle {
    background: #27ae60;
}

.heal-ring {
    border: 2px solid #27ae60;
}

.heal-glow {
    background: radial-gradient(circle, rgba(39, 174, 96, 0.3) 0%, rgba(39, 174, 96, 0) 70%);
}

@keyframes healGlowPulse {
    0% {
        opacity: 0.6;
        transform: scale(1);
    }
    50% {
        opacity: 0.3;
        transform: scale(1.8);
    }
    100% {
        opacity: 0;
        transform: scale(2.2);
    }
}

/* Press Any Key Overlay */
.press-key-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.3);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 9999;
}

.press-key-text {
    font-family: 'Press Start 2P', cursive;
    color: #fff;
    font-size: 36px;
    text-shadow: 0 0 10px rgba(255, 255, 255, 0.7);
    animation: pressKeyPulse 1.5s infinite;
}

@keyframes pressKeyPulse {
    0% { transform: scale(1); opacity: 1; }
    50% { transform: scale(1.1); opacity: 0.7; }
    100% { transform: scale(1); opacity: 1; }
}

/* Character Introduction Effects */
.character-intro {
    position: absolute;
    top: 0;
    height: 100%;
    width: 50%;
    background: transparent;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    z-index: 1000;
    transition: transform 1s ease-out;
}

.intro-left {
    left: 15%;
    transform: translateX(-100%);
}

.intro-right {
    right: 15%;
    transform: translateX(100%);
}

.intro-active {
    transform: translateX(0);
}

.character-intro .fighter-image {
    width: 600px;
    height: 800px;
    background-size: contain;
    background-position: center;
    background-repeat: no-repeat;
    opacity: 0;
    transform: scale(0.8);
    transition: all 1s ease-out;
    position: absolute;
    top: 25%;
    transform: translateY(-50%);
}

.intro-active .fighter-image {
    opacity: 1;
    transform: translateY(-50%) scale(1);
}

.character-name {
    font-family: 'Press Start 2P', cursive;
    color: #fff;
    font-size: 48px;
    background-color: transparent;
    opacity: 0;
    transition: all 1s ease-out 0.5s;
    text-shadow: 
        0 0 10px rgba(255, 0, 0, 0.7),
        0 0 20px rgba(255, 0, 0, 0.5),
        0 0 30px rgba(255, 0, 0, 0.3);
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    width: 100%;
    text-align: center;
}

.intro-left .character-name {
    top: 10%;
}

.intro-right .character-name {
    bottom: 20%;
}

.intro-active .character-name {
    opacity: 1;
}

/* Round Announcement */
.round-announcement {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-family: 'Press Start 2P', cursive;
    font-size: 72px;
    color: #ff0000;
    text-shadow: 
        0 0 20px rgba(255, 0, 0, 0.9),
        0 0 40px rgba(255, 0, 0, 0.7);
    opacity: 0;
    z-index: 10000;
    text-align: center;
    pointer-events: none;
}

.round-announcement.active {
    animation: roundAnnounce 3s ease-out forwards;
}

@keyframes roundAnnounce {
    0% { 
        opacity: 0;
        transform: translate(-50%, -50%) scale(0.8);
    }
    20% {
        opacity: 1;
        transform: translate(-50%, -50%) scale(1.2);
    }
    30% {
        opacity: 1;
        transform: translate(-50%, -50%) scale(1);
    }
    90% {
        opacity: 1;
        transform: translate(-50%, -50%) scale(1);
    }
    100% {
        opacity: 1;
        transform: translate(-50%, -50%) scale(1);
    }
}

/* Hide game elements during intro */
.intro-phase #fightArena,
.intro-phase .health-bars,
.intro-phase .round-wins-container,
.intro-phase #controls {
    opacity: 0;
    pointer-events: none;
}

/* Remove opacity from fight header during intro */
.intro-phase #fightHeader {
    opacity: 1;
    pointer-events: auto;
}

/* Overtime Timer Effect */
.overtime-timer {
    animation: overtimeFlash 1s infinite;
    font-size: 42px !important;
    text-shadow: 0 0 20px #ff0000;
}

@keyframes overtimeFlash {
    0% { color: #ff0000; text-shadow: 0 0 20px #ff0000; }
    50% { color: #ffffff; text-shadow: 0 0 30px #ff0000; }
    100% { color: #ff0000; text-shadow: 0 0 20px #ff0000; }
}

/* Overtime Announcement */
.overtime-announcement {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) scale(0);
    font-size: 96px;
    font-weight: bold;
    color: #ff0000;
    text-shadow: 0 0 20px #ff0000,
                 0 0 40px #ff0000;
    z-index: 1000;
    animation: overtimeAnnounce 2s ease-out forwards;
}

@keyframes overtimeAnnounce {
    0% { transform: translate(-50%, -50%) scale(0); opacity: 0; }
    50% { transform: translate(-50%, -50%) scale(1.2); opacity: 1; }
    70% { transform: translate(-50%, -50%) scale(1); opacity: 1; }
    100% { transform: translate(-50%, -50%) scale(1); opacity: 0; }
}

/* Showdown Overlay */
.showdown-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.7);
    z-index: 999;
    animation: overlayFade 1s ease-in forwards;
}

@keyframes overlayFade {
    from { background: rgba(0, 0, 0, 0); }
    to { background: rgba(0, 0, 0, 0.7); }
}

/* Final Judgment Text */
.judgment-announcement {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 84px;
    font-weight: bold;
    color: #ffd700;
    text-shadow: 0 0 20px #ffd700,
                 0 0 40px #ff0000;
    z-index: 1000;
    opacity: 1;
    transition: opacity 1s ease-out;
    animation: judgmentPulse 2s infinite;
}

@keyframes judgmentPulse {
    0% { transform: translate(-50%, -50%) scale(1); text-shadow: 0 0 20px #ffd700, 0 0 40px #ff0000; }
    50% { transform: translate(-50%, -50%) scale(1.1); text-shadow: 0 0 30px #ffd700, 0 0 60px #ff0000; }
    100% { transform: translate(-50%, -50%) scale(1); text-shadow: 0 0 20px #ffd700, 0 0 40px #ff0000; }
}

/* Health Drain Effect */
.health-bar.draining {
    animation: healthDrain 0.5s infinite;
    background: linear-gradient(90deg, 
        #ff0000 0%,
        #990000 50%,
        #ff0000 100%
    );
}

@keyframes healthDrain {
    0% { filter: brightness(1); }
    50% { filter: brightness(1.5); }
    100% { filter: brightness(1); }
}

/* Victory by Decision Text */
.victory-by-decision {
    position: fixed;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 48px;
    color: #ffd700;
    text-shadow: 0 0 15px #ffd700;
    opacity: 0;
    animation: decisionFade 2s forwards;
}

@keyframes decisionFade {
    0% { opacity: 0; transform: translate(-50%, -50%) scale(0); }
    100% { opacity: 1; transform: translate(-50%, -50%) scale(1); }
}